{"version":3,"sources":["components/Navbar.jsx","components/Recipe.jsx","components/Home.jsx","components/IngredientRow.jsx","components/AddIngredient.jsx","components/Upsert.jsx","components/IngredientsPage.jsx","components/App.jsx","index.js"],"names":["NavBar","Navbar","border","Brand","Toggle","Collapse","id","Nav","className","Link","as","to","Recipe","props","name","Button","onClick","onDelete","variant","onEdit","Home","useState","data","setData","history","useHistory","deleteRecipe","fetch","method","then","window","location","reload","editRecipe","push","useEffect","a","axios","result","fetchData","Container","recipes","map","recipe","IngredientRow","quantity","unit","AddIngredient","ingredientName","ingredientQuantity","ingredientUnit","ingredient","setIngredient","isDisabled","isNaN","handleIngredientChange","event","target","value","prevIngredient","type","onChange","min","step","onAdd","preventDefault","disabled","Upsert","useParams","isPending","setIsPending","ingredients","setRecipe","ingredientsList","setIngredientsList","abortCont","AbortController","console","log","signal","res","json","Object","keys","length","oldIngredient","array","split","isName","i","prevList","abort","deleteIngredient","prevRecipe","newIngredients","filter","index","x","handleChange","onSubmit","headers","body","JSON","stringify","required","Table","striped","bordered","hover","newIngredientsList","includes","indexOf","IngredientsPage","parseFloat","wasAdded","ing","sort","b","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b83602b1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n  return ( \r\n    <header>\r\n      <Navbar border=\"bottom\">\r\n        <Navbar.Brand>Recipes</Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n          <Nav.Link as={Link} to=\"/upsert/new\">New Recipe</Nav.Link>\r\n          <Nav.Link as={Link} to=\"/ingredients\">Ingredients</Nav.Link>            \r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n        </header> \r\n  );\r\n}\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nfunction Recipe(props) {\r\n    function handleDelete() {\r\n      props.onDelete(props.id);\r\n    }\r\n    function handleEdit() {\r\n        props.onEdit(props.id);\r\n      }\r\n  \r\n    return (\r\n      <div className=\"recipe\">\r\n        <h1>{props.name}</h1>\r\n        <Button onClick={handleDelete} variant=\"danger\">\r\n            Delete\r\n          </Button>\r\n          <Button onClick={handleEdit} variant=\"primary\">\r\n          Edit\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Recipe;\r\n  ","import React, {useState, useEffect} from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Recipe from \"./Recipe\";\r\nimport axios from 'axios';\r\n\r\nfunction Home() {\r\n  const [data, setData] = useState();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n      const fetchData = async () => {\r\n          const result = await axios(\r\n              '/api',\r\n          );\r\n          setData(result.data);\r\n      };\r\n      fetchData();\r\n  }, []);\r\n\r\n  function deleteRecipe(id) {\r\n    fetch(\"http://localhost:5000/api/\" + id, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      window.location.reload();\r\n    });\r\n  }\r\n  function editRecipe(id) {\r\n    history.push(\"/upsert/\" + id);\r\n  }\r\n  return (\r\n    <Container>\r\n      {data &&\r\n       data.recipes.map((recipe) => {\r\n          return (\r\n            <Recipe\r\n              name={recipe.name}\r\n              id={recipe.id}\r\n              onDelete={deleteRecipe}\r\n              onEdit={editRecipe}\r\n            />\r\n          );\r\n        })}\r\n      \r\n    </Container>\r\n  );\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nfunction IngredientRow(props) {\r\n  function handleDelete() {\r\n    props.onDelete(props.id);\r\n  }\r\n  \r\n  return (\r\n    <tr>\r\n      <td>{props.name}</td>\r\n      <td>{props.quantity}</td>\r\n      <td>{props.unit}</td>\r\n      \r\n      <td>\r\n          <Button onClick={handleDelete} variant=\"danger\">\r\n            Delete\r\n          </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nexport default IngredientRow;","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction AddIngredient(props){\r\n    const [ingredient, setIngredient] = useState({\r\n        ingredientName: \"\",\r\n        ingredientQuantity: 0,\r\n        ingredientUnit: \"\"\r\n      });\r\n      const isDisabled = ingredient.ingredientName === \"\" || \r\n                          ingredient.ingredientUnit === \"\" ||\r\n                          ingredient.ingredientQuantity <= 0 || !isNaN(ingredient.ingredientName);\r\n      function submitIngredient(event) {\r\n          props.onAdd(ingredient);\r\n          event.preventDefault();\r\n      }\r\n      function handleIngredientChange(event) {\r\n        const { name, value } = event.target;\r\n    \r\n        setIngredient((prevIngredient) => {\r\n          return {\r\n            ...prevIngredient,\r\n            [name]: value,\r\n          };\r\n        });\r\n      }\r\n    return (\r\n        <tr>\r\n                    <td>\r\n                      <input\r\n                        name=\"ingredientName\"\r\n                        type=\"text\"\r\n                        value={ingredient.name}\r\n                        onChange={handleIngredientChange}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"ingredientQuantity\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        step=\"0.001\"\r\n                        value={ingredient.quantity}\r\n                        onChange={handleIngredientChange}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"ingredientUnit\"\r\n                        type=\"text\"\r\n                        value={ingredient.unit}\r\n                        onChange={handleIngredientChange}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        type=\"button\"\r\n                        onClick={submitIngredient}\r\n                        variant=\"primary\"\r\n                        disabled={isDisabled}\r\n                      >\r\n                        Add Ingredient\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n    )\r\n}\r\nexport default AddIngredient;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport IngredientRow from \"./IngredientRow\";\r\nimport AddIngredient from \"./AddIngredient\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction Upsert() {\r\n  let { id } = useParams();\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [recipe, setRecipe] = useState({\r\n    name: \"\",\r\n    recipe: \"\",\r\n    ingredients: [],\r\n  });\r\n  const [ingredientsList, setIngredientsList] = useState({\r\n    name: [],\r\n    quantity: [],\r\n    unit: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n    console.log(\" the id is :\" +id)\r\n    fetch(\"http://localhost:5000/api/\" + id, { signal: abortCont.signal })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (Object.keys(data).length !== 0) {\r\n          setRecipe(data);\r\n\r\n          data.ingredients.map((oldIngredient) => {\r\n            const array = oldIngredient.split(\" \");\r\n            var name = \"\";\r\n            var quantity = \"\";\r\n            var unit = \"\";\r\n            var isName = true;\r\n            for (var i = 0; i < array.length; i++) {\r\n              if (isNaN(array[i]) || !isName) {\r\n                if (isName) {\r\n                  if (name === \"\") {\r\n                    name = array[i];\r\n                  } else {\r\n                    name += \" \" + array[i];\r\n                  }\r\n                } else {\r\n                  if (unit === \"\") {\r\n                    unit = array[i];\r\n                  } else {\r\n                    name += \" \" + array[i];\r\n                  }\r\n                }\r\n              } else {\r\n                quantity = array[i];\r\n                isName = false;\r\n              }\r\n            }\r\n            setIngredientsList((prevList) => {\r\n              return {\r\n                name: [...prevList.name, name],\r\n                quantity: [...prevList.quantity, quantity],\r\n                unit: [...prevList.unit, unit],\r\n              };\r\n            });\r\n          });\r\n        } else {\r\n          if (id !== \"new\") {\r\n            history.push(\"/\");\r\n          }\r\n        }\r\n        setIsPending(false);\r\n      });\r\n    return () => abortCont.abort();\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (\r\n      recipe.name === \"\" ||\r\n      recipe.recipe === \"\" ||\r\n      recipe.ingredients.length === 0\r\n    ) {\r\n      //toast or something\r\n    } else {\r\n      setRecipe( prevRecipe =>{\r\n        return (\r\n          {\r\n            ...prevRecipe,\r\n            recipe: prevRecipe.recipe.split(\"\\n\")\r\n          }\r\n        )\r\n      })\r\n      if (id === \"new\") {\r\n        fetch(\"http://localhost:5000/api\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(recipe),\r\n        }).then(() => {\r\n          history.push(\"/\");\r\n        });\r\n      } else {\r\n        console.log(\"now trying to edit:\")\r\n        console.log(recipe)\r\n        fetch(\"http://localhost:5000/api/\" + id, {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(recipe),\r\n        }).then(() => {\r\n          history.push(\"/\");\r\n        });\r\n      }\r\n    }\r\n  }\r\n  function deleteIngredient(id) {\r\n    setRecipe((prevRecipe) => {\r\n      const newIngredients = prevRecipe.ingredients.filter(\r\n        (ingredient, index) => {\r\n          return index !== id;\r\n        }\r\n      );\r\n      return {\r\n        ...prevRecipe,\r\n        ingredients: newIngredients,\r\n      };\r\n    });\r\n    setIngredientsList((prevList) => {\r\n      return {\r\n        name: prevList.name.filter((x, index) => {\r\n          return index !== id;\r\n        }),\r\n        quantity: prevList.quantity.filter((x, index) => {\r\n          return index !== id;\r\n        }),\r\n        unit: prevList.unit.filter((x, index) => {\r\n          return index !== id;\r\n        }),\r\n      };\r\n    });\r\n  }\r\n\r\n  function addIngredient(ingredient) {\r\n    var newIngredients = recipe.ingredients\r\n    var newIngredientsList = ingredientsList\r\n    if (ingredientsList.name.includes(ingredient.ingredientName)){\r\n      const index = ingredientsList.name.indexOf(ingredient.ingredientName)\r\n      newIngredients[index] = ingredient.ingredientName +\r\n      \" \" + ingredient.ingredientQuantity +\r\n      \" \" + ingredient.ingredientUnit;\r\n      newIngredientsList.quantity[index] = ingredient.ingredientQuantity;\r\n      newIngredientsList.unit[index] = ingredient.ingredientUnit;\r\n    } else { \r\n      newIngredients.push(ingredient.ingredientName +\r\n        \" \" + ingredient.ingredientQuantity +\r\n        \" \" + ingredient.ingredientUnit);\r\n      newIngredientsList.name.push(ingredient.ingredientName);\r\n      newIngredientsList.quantity.push(ingredient.ingredientQuantity);\r\n      newIngredientsList.unit.push(ingredient.ingredientUnit);\r\n    }\r\n    setRecipe( prevRecipe => {\r\n      return {\r\n        ...prevRecipe,\r\n        ingredients: newIngredients\r\n      };\r\n    });\r\n    setIngredientsList(newIngredientsList);\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setRecipe((prevRecipe) => {\r\n      return {\r\n        ...prevRecipe,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!isPending && (\r\n        <Container>\r\n          <div className=\"upsert\">\r\n            <h1>{id===\"new\" ? \"Add new\" : \"Update existing\"} recipe</h1>\r\n            <form onSubmit={handleSubmit}>\r\n              <label>Name:</label>\r\n              <input\r\n                name=\"name\"\r\n                type=\"text\"\r\n                required\r\n                value={recipe.name}\r\n                onChange={handleChange}\r\n              />\r\n              <label>Recipe:</label>\r\n              <textarea\r\n                name=\"recipe\"\r\n                type=\"text\"\r\n                required\r\n                value={recipe.recipe}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n              <Container>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Ingredient</th>\r\n                      <th>Quantity</th>\r\n                      <th>Unit</th>\r\n\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {recipe &&\r\n                      recipe.ingredients.map((ingredient, index) => {\r\n                        return (\r\n                          <IngredientRow\r\n                            name={ingredientsList.name[index]}\r\n                            quantity={ingredientsList.quantity[index]}\r\n                            unit={ingredientsList.unit[index]}\r\n                            id={index}\r\n                            onDelete={deleteIngredient}\r\n                          />\r\n                        );\r\n                      })}\r\n                    <AddIngredient onAdd={addIngredient} />\r\n                  </tbody>\r\n                </Table>\r\n              </Container>\r\n              <Button type=\"submit\" >{id===\"new\" ? \"Add new\" : \"Update\"} recipe</Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upsert;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from 'axios';\r\nfunction IngredientsPage() {\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n      const fetchData = async () => {\r\n          const result = await axios(\r\n              '/api',\r\n          );\r\n          setData(result.data);\r\n      };\r\n      fetchData();\r\n  }, []);\r\n\r\n  const [ingredientsList, setIngredientsList] = useState(false);\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    var newIngredientsList = [];\r\n    for (var i = 0; i < data.recipes.length; i++) {\r\n      console.log();\r\n      if (parseFloat(event.target[i].value) !== 0 && !isNaN(parseFloat(event.target[i].value))) {\r\n        for (var index = 0; index < data.recipes[i].ingredients.length; index++) {\r\n          const array = data.recipes[i].ingredients[index].split(\" \");\r\n          var name = \"\";\r\n          var quantity;\r\n          var unit = \"\";\r\n          var isName = true;\r\n          var wasAdded = false;\r\n          for (var x = 0; x < array.length; x++) {\r\n            if (isNaN(array[x]) || !isName) {\r\n              if (isName) {\r\n                if (name === \"\") {\r\n                  name = array[x];\r\n                } else {\r\n                  name += \" \" + array[x];\r\n                }\r\n              } else {\r\n                if (unit === \"\") {\r\n                  unit = array[x];\r\n                } else {\r\n                  name += \" \" + array[x];\r\n                }\r\n              }\r\n            } else {\r\n              quantity = parseFloat(array[x]) * parseFloat(event.target[i].value);\r\n              isName = false;\r\n            }\r\n          }\r\n          for (var ing = 0; ing < newIngredientsList.length; ing++) {\r\n            if (\r\n              newIngredientsList[ing].name === name &&\r\n              newIngredientsList[ing].unit === unit\r\n            ) {\r\n              newIngredientsList[ing].quantity +=\r\n                quantity;\r\n              wasAdded = true;\r\n            }\r\n          }\r\n          if (!wasAdded) {\r\n            newIngredientsList.push({\r\n              name: name,\r\n              quantity: quantity,\r\n              unit: unit,\r\n            });\r\n          }\r\n        }\r\n      }\r\n      \r\n    }\r\n    setIngredientsList(\r\n      newIngredientsList.sort((a, b) => {\r\n        if (a.name < b.name) {\r\n          return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n    );\r\n  }\r\n\r\n  function handleClear(event) {\r\n    event.preventDefault();\r\n    setIngredientsList(false);\r\n  }\r\n  return (\r\n    <Container>\r\n      <div className=\"ingredients\">\r\n        <form onSubmit={handleSubmit}>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"name\">Recipe Name</th>\r\n                <th className=\"value\">Ammount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data &&\r\n                data.recipes.map((recipe) => {\r\n                  return (\r\n                    <tr>\r\n                      <td className=\"name\">{recipe.name}</td>\r\n                      <td className=\"value\">\r\n                        <input name={recipe.name} type=\"number\" min=\"0\" />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n          <Button type=\"submit\">Calculate ingredients</Button>\r\n        </form>\r\n        {ingredientsList && (\r\n          <form onSubmit={handleClear}>\r\n            <Button type=\"submit\" variant =\"secondary\">Clear</Button>\r\n          </form>\r\n        )}\r\n      </div>\r\n\r\n      {ingredientsList && (\r\n        <Container>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Ingredient</th>\r\n                <th>Quantity</th>\r\n                <th>Unit</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {ingredientsList.map((ingredient) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{ingredient.name}</td>\r\n                    <td>{ingredient.quantity}</td>\r\n                    <td>{ingredient.unit}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default IngredientsPage;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport NavBar from \"./Navbar\";\r\nimport Home from \"./Home\";\r\nimport Upsert from \"./Upsert\";\r\nimport IngredientsPage from \"./IngredientsPage\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/upsert/:id\">\r\n            <Upsert />\r\n          </Route>\r\n          <Route exact path=\"/ingredients\">\r\n            <IngredientsPage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./components/App\";\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\n\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}